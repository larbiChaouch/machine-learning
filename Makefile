# D√©finit l'interpr√©teur Python
PYTHON = python

# D√©finition des scripts √† ex√©cuter
FEATURE_SCRIPT = feature.py
PREPROCESSING_SCRIPT = preprocessing.py
DATA_PREPARATION_SCRIPT = data_preparation.py
DATA_FINAL_SCRIPT = data_final.py
DATA_LOADER_SCRIPT = data_loader.py
MODEL_TRAINER_SCRIPT = model_trainer.py
MODEL_EVALUATOR_SCRIPT = model_evaluator.py
TACHE4_PROCESSOR_SCRIPT = tache4_processor.py
COMPARISON_SCRIPT = comparaisonTache.py 

# Dossiers utilis√©s
RESULTS_DIR_TACHE3 = Datatest/Tache3/Results
MODELS_DIR_TACHE3 = Datatest/Tache3/Entrainement
RESULTS_DIR_TACHE4 = Datatest/Tache4/Results
MODELS_DIR_TACHE4 = Datatest/Tache4/Entrainement
COMPARISON_DIR = Datatest/Comparaison_Tache3_Tache4

# Cible principale : ex√©cuter toutes les √©tapes dans l'ordre
all: install_deps feature preprocessing data_preparation data_final data_loader model_trainer model_evaluator tache4 comparison

# Installation des d√©pendances (avec v√©rification de requirements.txt)
install_deps:
	@echo "* V√©rification de requirements.txt..."
	@if [ ! -f requirements.txt ]; then \
		echo "---------  requirements.txt introuvable, g√©n√©ration automatique... -------"; \
		$(PYTHON) -m pip freeze > requirements.txt; \
	fi
	@echo "* Installation des d√©pendances..."
	$(PYTHON) -m pip install -r requirements.txt || true
	@echo "* V√©rification et installation des paquets manquants..."
	$(PYTHON) -m pip install numpy pandas scikit-learn matplotlib scikit-plot seaborn --no-cache-dir


# √âtape 1 : Extraction des caract√©ristiques (feature.py)
feature:
	@echo "-- √âtape 1 : Extraction des caract√©ristiques..."
	$(PYTHON) $(FEATURE_SCRIPT)

# √âtape 2 : Pr√©traitement des donn√©es (preprocessing.py)
preprocessing: feature
	@echo "-- √âtape 2 : Pr√©traitement des donn√©es..."
	$(PYTHON) $(PREPROCESSING_SCRIPT)

# √âtape 3 : Nettoyage et normalisation des donn√©es (data_preparation.py)
data_preparation: preprocessing
	@echo "-- √âtape 3 : Nettoyage et normalisation des donn√©es..."
	$(PYTHON) $(DATA_PREPARATION_SCRIPT)

# √âtape 4 : Fusion des donn√©es finales (data_final.py)
data_final: data_preparation
	@echo "-- √âtape 4 : Fusion des donn√©es finales..."
	$(PYTHON) $(DATA_FINAL_SCRIPT)

# √âtape 5 : Chargement des donn√©es (data_loader.py)
data_loader: data_final
	@echo "-- √âtape 5 : Chargement des donn√©es..."
	$(PYTHON) $(DATA_LOADER_SCRIPT)

# √âtape 6 : Entra√Ænement des mod√®les (model_trainer.py)
model_trainer: data_loader
	@echo "-- √âtape 6 : Entra√Ænement des mod√®les..."
	$(PYTHON) $(MODEL_TRAINER_SCRIPT)

# √âtape 7 : √âvaluation des mod√®les (model_evaluator.py)
model_evaluator: model_trainer
	@echo "-- √âtape 7 : √âvaluation des mod√®les..."
	$(PYTHON) $(MODEL_EVALUATOR_SCRIPT)

# √âtape 8 : T√¢che 4 - Analyse comparative sur classes d√©s√©quilibr√©es
tache4: model_evaluator
	@echo "-- √âtape 8 : Ex√©cution de la T√¢che 4 (Donn√©es d√©s√©quilibr√©es)..."
	$(PYTHON) $(TACHE4_PROCESSOR_SCRIPT)
	@echo ""
	@echo "+++++++++++++ T√ÇCHE 4 TERMIN√âE AVEC SUCC√àS ! ++++++++++++++++++"
	@echo ""

# √âtape 9 : Comparaison des performances entre la T√¢che 3 et la T√¢che 4
comparison: tache4
	@echo "-- √âtape 9 : G√©n√©ration des graphiques comparatifs entre la T√¢che 3 et la T√¢che 4..."
	$(PYTHON) $(COMPARISON_SCRIPT)
	@echo ""
	@echo "+++++++++++++ COMPARAISON ENTRE T√ÇCHE 3 ET T√ÇCHE 4 TERMIN√âE ! ++++++++++++++++++"
	@echo ""

	# Affichage d'un message final pour macOS et Linux
	@echo "*******************************************************************************************************************************"
	@echo "***************************************** IMPORTANT :**************************************************************************"
	@echo "* Pour OUVRIR les graphes de COMPARAISON GLOBALE 										*"
	@echo "* utilisez la commande suivante :                									*"
	@echo "*                                                									*"
	@echo "# * <-----------  **open Datatest/Comparaison_Tache3_Tache4/comparaison_globale.png** --------->					*"
	@echo "*                                                									*"
	@echo "* Si vous √™tes sous Linux, utilisez :            									*"
	@echo "*   xdg-open Datatest/Comparaison_Tache3_Tache4/comparaison_globale.png  								*"
	@echo "*******************************************************************************************************************************"
	@echo ""

	# Affichage d'une bo√Æte de dialogue sur macOS
	@osascript -e 'display dialog "Comparaison termin√©e !\n\nüìä Pour voir le graphe de comparaison globale, ouvrez :\nDatatest/Comparaison_Tache3_Tache4/comparaison_globale.png\n\nEx√©cutez cette commande :\nopen Datatest/Comparaison_Tache3_Tache4/comparaison_globale.png" with title "Analyse Comparaison Globale" buttons {"OK"} default button "OK"' || true

# Nettoyage des fichiers g√©n√©r√©s
clean:
	@echo "-Nettoyage- Suppression des fichiers interm√©diaires et r√©sultats..."
	rm -rf Datatest/Tache2/Partie1/*.csv Datatest/Tache2/Partie2/*.csv Datatest/Tache2_donnees_final/*.csv
	rm -rf $(RESULTS_DIR_TACHE3) $(MODELS_DIR_TACHE3)
	rm -rf $(RESULTS_DIR_TACHE4) $(MODELS_DIR_TACHE4)
	rm -rf Datatest/
	rm -f requirements.txt
	clear

.PHONY: all install_deps feature preprocessing data_preparation data_final data_loader model_trainer model_evaluator tache4 comparison clean
